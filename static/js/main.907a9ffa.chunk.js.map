{"version":3,"sources":["components/searchResult.jsx","components/noneResult.jsx","components/searchResults.jsx","components/searchBar.jsx","components/ownedDevice.jsx","components/ownedDevices.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SearchResult","Button","onClick","props","onAddDevice","deviceInfo","className","border","variant","style","maxHeight","width","Row","Col","xs","Image","src","this","image","rounded","fluid","verticalAlign","display","margin","name","Component","NoneResult","disabled","SearchResults","state","position","overflow","backgroundColor","overflowY","overflowX","borderWidth","borderColor","showResults","searchResults","length","map","key","id","wikiLink","SearchBar","outerDivNode","createRef","textInputNode","inputValue","handleChange","searchStr","setState","onChange","handleClickInside","console","log","handleClickOutside","e","current","contains","target","handleAddDevice","document","addEventListener","height","ref","FormControl","event","value","placeholder","top","borderRadius","ownedDevice","Toast","onClose","onDelete","maxWidth","Header","alt","Body","window","open","block","OwnedDevices","padding","ownedDevices","marginTop","marginLeft","marginRight","App","myDevices","previousResults","handleDelete","deviceId","filter","d","localStorage","setItem","JSON","stringify","handleSearchStringChange","requestString","replace","removeSpaces","fetch","then","results","json","data","searchData","output","i","element","dataType","namespace","push","wikiid","title","medium","url","filterAndFormatResults","catch","error","getFilteredResults","response","deviceData","newDeviceState","concat","saveData","parse","getItem","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.907a9ffa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass SearchResult extends Component {\n  render() {\n    return (\n      <Button\n        onClick={() => this.props.onAddDevice(this.props.deviceInfo)}\n        //variant=\"light\"\n        className=\"m-2\"\n        border=\"0\"\n        variant=\"light\"\n        style={{\n          maxHeight: \"70px\",\n          width: \"100%\",\n          //backgroundColor: \"#88a6b433\",\n          border: \"0px\"\n          //color: \"#222224\"\n        }}\n      >\n        <div className=\"gridContainer\">\n          <Row>\n            <Col xs={2}>\n              <Image\n                src={this.props.deviceInfo.image}\n                rounded=\"true\"\n                fluid=\"true\"\n                style={{\n                  verticalAlign: \"middle\"\n                }}\n              />\n            </Col>\n            <Col style={{ display: \"flex\" }}>\n              <h5 style={{ margin: \"auto\" }}>{this.props.deviceInfo.name}</h5>\n            </Col>\n          </Row>\n        </div>\n      </Button>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\n\nclass NoneResult extends Component {\n  render() {\n    return (\n      <Button\n        disabled\n        variant=\"light\"\n        className=\"m-2\"\n        border=\"0\"\n        style={{ width: \"100%\" }}\n      >\n        No Results\n        {/* <div className=\"gridContainer\">\n          <Row>\n            <span style={{ textAlign: \"center\" }}>No Results</span>\n          </Row>\n        </div> */}\n      </Button>\n    );\n  }\n}\n\nexport default NoneResult;\n","import React, { Component } from \"react\";\n//import Device from \"./device\";\nimport SearchResult from \"./searchResult\";\nimport NoneResult from \"./noneResult\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\n\nclass SearchResults extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div\n        style={{\n          position: \"relative\",\n          overflow: \"hidden\",\n          backgroundColor: \"#f7f9fa\",\n          margin: \"2\"\n        }}\n      >\n        <div\n          className=\"container\"\n          style={{\n            width: \"96%\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\",\n            borderWidth: \"5px\",\n            borderColor: \"#000000\"\n          }}\n        >\n          {this.props.showResults && this.props.searchResults.length > 0 ? (\n            this.props.showResults &&\n            this.props.searchResults.map(deviceInfo => (\n              <Row key={deviceInfo.id}>\n                <SearchResult\n                  key={deviceInfo.wikiLink}\n                  deviceInfo={deviceInfo}\n                  onAddDevice={this.props.onAddDevice}\n                />\n              </Row>\n            ))\n          ) : this.props.showResults ? (\n            <Row>\n              <NoneResult />\n            </Row>\n          ) : null}\n          {/* {this.props.showResults &&\n            this.props.searchResults.map(deviceInfo => (\n              <Row key={deviceInfo.id} style={{ maxHeight: \"70px\" }}>\n                <SearchResult\n                  key={deviceInfo.wikiLink}\n                  deviceInfo={deviceInfo}\n                  onAddDevice={this.props.onAddDevice}\n                />\n              </Row>\n            ))} */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import \"../styles/styles.css\";\nimport React, { Component, createRef } from \"react\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport SearchResults from \"./searchResults\";\n\nclass SearchBar extends Component {\n  state = {\n    showResults: false,\n    outerDivNode: createRef(),\n    textInputNode: createRef(),\n    inputValue: \"\"\n  };\n\n  handleChange = searchStr => {\n    this.setState({ inputValue: searchStr });\n    this.props.onChange(searchStr);\n    if (this.props.searchResults.length > 0)\n      this.setState({ showResults: true });\n  };\n  handleClickInside = () => {\n    console.log(\"CLICKED INSIDE\");\n    this.setState({ showResults: true });\n  };\n\n  handleClickOutside = e => {\n    if (this.state.outerDivNode.current.contains(e.target)) return;\n    this.setState({ showResults: false });\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleAddDevice = deviceInfo => {\n    this.setState({ inputValue: \"\" });\n    this.props.onAddDevice(deviceInfo);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"hide-scrollbar\"\n        style={{ height: \"38px\" }}\n        ref={this.state.outerDivNode}\n      >\n        <FormControl\n          onClick={this.handleClickInside}\n          onChange={event => this.handleChange(event.target.value)}\n          placeholder=\"Search for a device\"\n          value={this.state.inputValue}\n          ref={this.state.textInputNode}\n        />\n        <div\n          className=\"hide-scrollbar\"\n          style={{\n            maxHeight: \"300px\",\n            position: \"relative\",\n            top: \"3px\",\n            overflowY: \"scroll\",\n            borderRadius: \"5px\"\n          }}\n        >\n          <SearchResults\n            onAddDevice={this.handleAddDevice}\n            searchResults={this.props.searchResults}\n            showResults={this.state.showResults}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Toast from \"react-bootstrap/Toast\";\n\nclass ownedDevice extends Component {\n  render() {\n    return (\n      <Toast\n        onClose={() => this.props.onDelete(this.props.deviceInfo.id)}\n        style={{ width: \"100%\", maxWidth: \"100% !important\" }}\n      >\n        <Toast.Header>\n          <img\n            src={this.props.deviceInfo.image}\n            style={{ maxHeight: \"30px\", maxWidth: \"30px\" }}\n            className=\"rounded mr-2\"\n            alt=\"\"\n          />\n          <strong className=\"mr-auto\">{this.props.deviceInfo.name}</strong>\n        </Toast.Header>\n        <Toast.Body>\n          <Button\n            onClick={() =>\n              window.open(this.props.deviceInfo.wikiLink, \"_blank\")\n            }\n            variant=\"primary\"\n            block\n          >\n            wiki\n          </Button>\n        </Toast.Body>\n      </Toast>\n\n      // <Card border=\"primary\" style={{ width: \"100%\" }}>\n      //   <div className=\"gridContainer\">\n      //     <Row>\n      //       <Col xs={2} style={{ position: \"relative\" }}>\n      //         <div\n      //           style={{\n      //             position: \"absolute\",\n      //             top: \"50%\",\n      //             transform: \"translateY(-50%)\",\n      //             marginLeft: \"15px\"\n      //           }}\n      //         >\n      //           <Card.Img\n      //             src={this.props.deviceInfo.image}\n      //             rounded=\"true\"\n      //             fluid=\"true\"\n      //           />\n      //         </div>\n      //       </Col>\n      //       <Col>\n      //         <Row>\n      //           <Col xs=\"12\">\n      //             <h5 style={{ textAlign: \"center\" }}>\n      //               {this.props.deviceInfo.name}\n      //             </h5>\n      //           </Col>\n      //         </Row>\n      //         <Row>\n      //           <Card.Body>\n      //             <Button\n      //               onClick={() =>\n      //                 window.open(this.props.deviceInfo.wikiLink, \"_blank\")\n      //               }\n      //               variant=\"primary\"\n      //               block\n      //             >\n      //               wiki\n      //             </Button>\n      //           </Card.Body>\n      //         </Row>\n      //       </Col>\n      //     </Row>\n      //   </div>\n      //   <div style={{ position: \"absolute\", width: \"100%\" }}>\n      //     <button\n      //       onClick={() => this.props.onDelete(this.props.deviceInfo.id)}\n      //       type=\"button\"\n      //       className=\"close\"\n      //       aria-label=\"Close\"\n      //     >\n      //       <span className=\"m-2\" aria-hidden=\"true\">\n      //         &times;\n      //       </span>\n      //     </button>\n      //   </div>\n      // </Card>\n    );\n  }\n}\n\nexport default ownedDevice;\n","import \"../styles/styles.css\";\nimport React, { Component } from \"react\";\n\nimport Row from \"react-bootstrap/Row\";\nimport OwnedDevice from \"./ownedDevice\";\n\nclass OwnedDevices extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div\n        className=\"hide-scrollbar\"\n        style={{\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\",\n          overflow: \"hidden\",\n          padding: \"5px\",\n          backgroundColor: \"#ebeef0\",\n          borderRadius: \"5px\"\n        }}\n      >\n        <div\n          className=\"container hide-scrollbar\"\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\"\n          }}\n        >\n          {this.props.ownedDevices.map(deviceInfo => (\n            <Row\n              style={{\n                marginTop: \"6px\",\n                marginLeft: \"-6px\",\n                marginRight: \"-6px\"\n              }}\n            >\n              <OwnedDevice\n                key={deviceInfo.id}\n                deviceInfo={deviceInfo}\n                onDelete={this.props.onDelete}\n              />\n            </Row>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OwnedDevices;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/searchBar\";\nimport OwnedDevices from \"./components/ownedDevices\";\n\n/* TODO: \n - change search results and owned devices to 'toasts'\n - Add toast at bottom of screen when user adds device\n - Add modal popup that shows if user has no saved devices \n*/\n/*\n - ifixit black: #222224\n - ifixit blue: #0068d0\n - ifixit off-white: #f7f9fa\n*/\n\nclass App extends Component {\n  state = {\n    myDevices: [\n      // {\n      //   id: 0,\n      //   name: \"iPhone XR\",\n      //   image:\n      //     \"https://d3nevzfk7ii3be.cloudfront.net/igi/yiiosKwJCvSrNS12.thumbnail\",\n      //   wikiLink: \"https://www.ifixit.com/Device/iPhone_XR\"\n      // },\n      // {\n      //   id: 1,\n      //   name: \"Xbox One\",\n      //   image:\n      //     \"https://d3nevzfk7ii3be.cloudfront.net/igi/GtHYwOXhf6TNnp2h.large\",\n      //   wikiLink: \"https://www.ifixit.com/Device/Xbox_One\"\n      // }\n    ],\n    searchResults: [],\n    previousResults: []\n  };\n\n  componentDidMount() {\n    const saveData = JSON.parse(localStorage.getItem(\"myDevices\"));\n\n    //console.log(\"myDevices = \\n\\n |\" + saveData + \"|\");\n    saveData != null\n      ? this.setState({ myDevices: saveData })\n      : this.setState({ myDevices: [] });\n  }\n\n  handleDelete = deviceId => {\n    const myDevices = this.state.myDevices.filter(d => d.id !== deviceId);\n    localStorage.setItem(\"myDevices\", JSON.stringify(myDevices));\n    this.setState({ myDevices });\n  };\n\n  handleSearchStringChange = searchStr => {\n    if (searchStr !== \"\") {\n      getFilteredResults(searchStr).then(response => {\n        console.log(\"response: \" + response);\n        if (response.length > 0) {\n          console.log(\"Prev results before: \\n\", this.state.previousResults);\n          this.setState({ previousResults: this.state.searchResults });\n          this.setState({ searchResults: response });\n          console.log(\"Prev results after: \\n\", this.state.previousResults);\n        } else this.setState({ searchResults: this.state.previousResults });\n      });\n    } else this.setState({ searchResults: [] });\n  };\n\n  handleAddDevice = deviceData => {\n    const newDeviceState = this.state.myDevices.concat(deviceData);\n    this.setState({ previousResults: [] });\n    this.setState({ searchResults: [] });\n    this.setState({ myDevices: newDeviceState });\n    localStorage.setItem(\"myDevices\", JSON.stringify(newDeviceState));\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          height: \"100vh\",\n          overflow: \"hidden\"\n        }}\n      >\n        <div\n          className=\"m-2\"\n          style={{\n            width: \"340px\",\n            height: \"50%\",\n            overflow: \"hidden\",\n            margin: \"0 auto\"\n          }}\n        >\n          <OwnedDevices\n            onDelete={this.handleDelete}\n            ownedDevices={this.state.myDevices}\n          />\n        </div>\n        <div\n          className=\"align-middle m-2\"\n          style={{ width: \"340px\", height: \"38px\" }}\n        >\n          <SearchBar\n            onAddDevice={this.handleAddDevice}\n            onChange={this.handleSearchStringChange}\n            searchResults={this.state.searchResults}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//================================ helper functions ================================\n\nfunction getFilteredResults(searchStr) {\n  //https://www.ifixit.com/api/2.0/suggest/QUERYSTRING?doctypes=device\n  let requestString = \"https://www.ifixit.com/api/2.0/suggest/\";\n  requestString += removeSpaces(searchStr) + \"?doctypes=device\";\n\n  let searchResults = fetch(requestString)\n    .then(results => {\n      return results.json();\n    })\n    .then(function(data) {\n      return filterAndFormatResults(data.results);\n    })\n    .catch(function(error) {\n      console.log(error);\n      return [];\n    });\n  return searchResults;\n}\n\nfunction removeSpaces(searchStr) {\n  return searchStr.replace(/\\s/g, \"%20\");\n}\nfunction filterAndFormatResults(searchData) {\n  let output = [];\n  for (let i = 0; i < searchData.length; i++) {\n    const element = searchData[i];\n    if (element.dataType === \"wiki\" && element.namespace === \"CATEGORY\") {\n      output.push({\n        id: element.wikiid,\n        name: element.title,\n        image: element.image.medium,\n        wikiLink: element.url\n      });\n    }\n  }\n  return output;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}
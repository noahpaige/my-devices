{"version":3,"sources":["components/searchResult.jsx","components/noneResult.jsx","components/searchResults.jsx","components/searchBar.jsx","components/ownedDevice.jsx","components/ownedDevices.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SearchResult","Button","onClick","props","onAddDevice","deviceInfo","className","border","variant","style","maxHeight","width","Row","Col","xs","Image","src","this","image","rounded","fluid","verticalAlign","display","margin","name","Component","NoneResult","disabled","backgroundColor","borderWidth","color","SearchResults","state","showResults","height","top","borderRadius","overflowY","overflowX","padding","searchResults","length","map","key","id","wikiLink","SearchBar","outerDivNode","createRef","textInputNode","inputValue","handleChange","searchStr","setState","onChange","handleClickInside","handleClickOutside","e","current","contains","target","handleAddDevice","handleUnfocus","console","log","document","addEventListener","ref","FormControl","event","value","placeholder","position","onBlur","ownedDevice","Toast","onClose","onDelete","boxShadow","Header","maxWidth","alt","Body","window","open","OwnedDevices","overflow","ownedDevices","marginTop","marginLeft","marginRight","App","myDevices","previousResults","handleDelete","deviceId","filter","d","localStorage","setItem","JSON","stringify","handleSearchStringChange","requestString","replace","removeSpaces","fetch","then","results","json","data","searchData","output","i","element","dataType","namespace","push","wikiid","title","medium","url","filterAndFormatResults","catch","error","getFilteredResults","response","deviceData","includesDevice","newDeviceState","concat","saveData","parse","getItem","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e8664bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass SearchResult extends Component {\n  render() {\n    return (\n      <Button\n        onClick={() => this.props.onAddDevice(this.props.deviceInfo)}\n        //variant=\"light\"\n        className=\"m-2\"\n        border=\"0\"\n        variant=\"light\"\n        style={{\n          maxHeight: \"70px\",\n          width: \"100%\",\n          //backgroundColor: \"#88a6b433\",\n          border: \"0px\"\n          //color: \"#222224\"\n        }}\n      >\n        <div className=\"gridContainer\">\n          <Row>\n            <Col xs={3} className=\"align-middle\">\n              <Image\n                src={this.props.deviceInfo.image}\n                rounded=\"true\"\n                fluid=\"true\"\n                style={{\n                  verticalAlign: \"middle\"\n                }}\n              />\n            </Col>\n            <Col style={{ display: \"flex\" }}>\n              <h5 style={{ margin: \"auto\" }}>{this.props.deviceInfo.name}</h5>\n            </Col>\n          </Row>\n        </div>\n      </Button>\n    );\n  }\n}\n\nexport default SearchResult;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass NoneResult extends Component {\n  render() {\n    return (\n      <Button\n        disabled\n        className=\"m-2\"\n        style={{\n          width: \"100%\",\n          backgroundColor: \"#cccccc\",\n          borderWidth: \"0\",\n          color: \"#696970\"\n        }}\n      >\n        No Results\n      </Button>\n    );\n  }\n}\n\nexport default NoneResult;\n","import React, { Component } from \"react\";\nimport SearchResult from \"./searchResult\";\nimport NoneResult from \"./noneResult\";\n\nimport Row from \"react-bootstrap/Row\";\n\nimport \"../styles/styles.css\";\n\nclass SearchResults extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div\n        className={this.props.showResults ? \"\" : \"hidden\"}\n        style={{\n          height: \"100%\",\n          top: \"1px\",\n          borderRadius: \"5px\",\n          overflowY: \"hidden\",\n          overflowX: \"hidden\",\n          padding: \"15px\"\n        }}\n      >\n        {this.props.searchResults.length > 0 ? (\n          this.props.showResults &&\n          this.props.searchResults.map(deviceInfo => (\n            <Row key={deviceInfo.id}>\n              <SearchResult\n                key={deviceInfo.wikiLink}\n                deviceInfo={deviceInfo}\n                onAddDevice={this.props.onAddDevice}\n              />\n            </Row>\n          ))\n        ) : this.props.showResults ? (\n          <Row>\n            <NoneResult />\n          </Row>\n        ) : null}\n      </div>\n      // <div\n      //   className={this.props.showResults ? \"\" : \"hidden\"}\n      //   style={{\n      //     position: \"relative\",\n      //     overflowX: \"hidden\",\n      //     padding: \"5px\"\n      //   }}\n      // >\n      //   {this.props.searchResults.length > 0 ? (\n      //     this.props.showResults &&\n      //     this.props.searchResults.map(deviceInfo => (\n      //       <Row key={deviceInfo.id}>\n      //         <SearchResult\n      //           key={deviceInfo.wikiLink}\n      //           deviceInfo={deviceInfo}\n      //           onAddDevice={this.props.onAddDevice}\n      //         />\n      //       </Row>\n      //     ))\n      //   ) : this.props.showResults ? (\n      //     <Row>\n      //       <NoneResult />\n      //     </Row>\n      //   ) : null}\n      // </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, { Component, createRef } from \"react\";\n\nimport FormControl from \"react-bootstrap/FormControl\";\nimport SearchResults from \"./searchResults\";\nimport \"../styles/styles.css\";\n\nclass SearchBar extends Component {\n  state = {\n    showResults: false,\n    outerDivNode: createRef(),\n    textInputNode: createRef(),\n    inputValue: \"\"\n  };\n\n  handleChange = searchStr => {\n    this.setState({ inputValue: searchStr });\n    this.props.onChange(searchStr);\n    if (this.props.searchResults.length > 0)\n      this.setState({ showResults: true });\n  };\n  handleClickInside = () => {\n    this.setState({ showResults: true });\n  };\n\n  handleClickOutside = e => {\n    if (this.state.outerDivNode.current.contains(e.target)) return;\n    this.setState({ showResults: false });\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  handleAddDevice = deviceInfo => {\n    this.setState({ showResults: false });\n    this.setState({ inputValue: \"\" });\n    this.props.onAddDevice(deviceInfo);\n  };\n  handleUnfocus = () => {\n    console.log(\"UNFOCUS\");\n    this.setState({ showResults: false });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"\"\n        style={{\n          maxHeight: \"32vh\",\n          height: \"32vh\",\n          overflowX: \"hidden\",\n          overflowY: \"hidden\",\n          borderRadius: \"5px\"\n        }}\n      >\n        <div\n          className=\"container\"\n          style={{ height: \"38px\", width: \"340px\", padding: \"0px\" }}\n          ref={this.state.outerDivNode}\n        >\n          <FormControl\n            className=\"shadow search-bar\"\n            onClick={this.handleClickInside}\n            onChange={event => this.handleChange(event.target.value)}\n            placeholder=\"Search for a device\"\n            value={this.state.inputValue}\n            ref={this.state.textInputNode}\n            style={{\n              backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n              width: \"100%\",\n              padding: \"5px\"\n            }}\n          />\n          <div\n            className={this.state.showResults ? \"shadow\" : \"hidden\"}\n            style={{\n              position: \"relative\",\n              maxHeight: \"26vh\",\n              top: \"1px\",\n              overflowX: \"hidden\",\n              overflowY: \"auto\",\n              borderRadius: \"5px\",\n              backgroundColor: \"rgba(255,255,255,0.3)\",\n              padding: \"10px\"\n            }}\n          >\n            <SearchResults\n              onAddDevice={this.handleAddDevice}\n              searchResults={this.props.searchResults}\n              showResults={this.state.showResults}\n              onBlur={this.handleUnfocus}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport Toast from \"react-bootstrap/Toast\";\n\nimport \"../styles/styles.css\";\n\nclass ownedDevice extends Component {\n  render() {\n    return (\n      <Toast\n        onClose={() => this.props.onDelete(this.props.deviceInfo.id)}\n        style={{\n          width: \"100%\",\n          backgroundColor: \"rgba(0,0,0,0.05)\",\n          boxShadow: \"none\"\n        }}\n      >\n        <Toast.Header\n          style={{\n            backgroundColor: \"rgba(0,0,0,0.04)\",\n            color: \"#696970\"\n          }}\n        >\n          <img\n            src={this.props.deviceInfo.image}\n            style={{ maxHeight: \"30px\", maxWidth: \"30px\" }}\n            className=\"rounded mr-2\"\n            alt=\"\"\n          />\n          <strong className=\"mr-auto\">{this.props.deviceInfo.name}</strong>\n        </Toast.Header>\n        <Toast.Body>\n          <button\n            className=\"wiki-button\"\n            onClick={() =>\n              window.open(this.props.deviceInfo.wikiLink, \"_blank\")\n            }\n          >\n            wiki\n          </button>\n        </Toast.Body>\n      </Toast>\n    );\n  }\n}\n\nexport default ownedDevice;\n","import \"../styles/styles.css\";\nimport React, { Component } from \"react\";\n\nimport Row from \"react-bootstrap/Row\";\nimport OwnedDevice from \"./ownedDevice\";\n\nclass OwnedDevices extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div\n        className=\"new-scrollbar un-blur\"\n        style={{\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\",\n          overflow: \"hidden\",\n          padding: \"5px\",\n          backgroundColor: \"rgba(255,255,255,0.3)\",\n          borderRadius: \"5px\"\n        }}\n      >\n        <div\n          className=\"container hide-scrollbar\"\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            overflowY: \"auto\",\n            overflowX: \"hidden\"\n          }}\n        >\n          {this.props.ownedDevices.map(deviceInfo => (\n            <Row\n              style={{\n                marginTop: \"6px\",\n                marginLeft: \"-6px\",\n                marginRight: \"-6px\"\n              }}\n              key={deviceInfo.id}\n            >\n              <OwnedDevice\n                key={deviceInfo.id}\n                deviceInfo={deviceInfo}\n                onDelete={this.props.onDelete}\n              />\n            </Row>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OwnedDevices;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport SearchBar from \"./components/searchBar\";\nimport OwnedDevices from \"./components/ownedDevices\";\n\nclass App extends Component {\n  state = {\n    myDevices: [\n      // {\n      //   id: 0,\n      //   name: \"iPhone XR\",\n      //   image:\n      //     \"https://d3nevzfk7ii3be.cloudfront.net/igi/yiiosKwJCvSrNS12.thumbnail\",\n      //   wikiLink: \"https://www.ifixit.com/Device/iPhone_XR\"\n      // },\n      // {\n      //   id: 1,\n      //   name: \"Xbox One\",\n      //   image:\n      //     \"https://d3nevzfk7ii3be.cloudfront.net/igi/GtHYwOXhf6TNnp2h.large\",\n      //   wikiLink: \"https://www.ifixit.com/Device/Xbox_One\"\n      // }\n    ],\n    searchResults: [],\n    previousResults: [],\n    showResults: false\n  };\n\n  componentDidMount() {\n    const saveData = JSON.parse(localStorage.getItem(\"myDevices\"));\n    saveData != null\n      ? this.setState({ myDevices: saveData })\n      : this.setState({ myDevices: [] });\n  }\n\n  handleDelete = deviceId => {\n    const myDevices = this.state.myDevices.filter(d => d.id !== deviceId);\n    localStorage.setItem(\"myDevices\", JSON.stringify(myDevices));\n    this.setState({ myDevices });\n  };\n\n  handleSearchStringChange = searchStr => {\n    if (searchStr !== \"\") {\n      getFilteredResults(searchStr).then(response => {\n        console.log(\"response: \" + response);\n        if (response.length > 0) {\n          this.setState({ previousResults: this.state.searchResults });\n          this.setState({ searchResults: response });\n        } else this.setState({ searchResults: this.state.previousResults });\n      });\n      this.setState({ showResults: true });\n    } else {\n      this.setState({ searchResults: [] });\n      this.setState({ showResults: false });\n    }\n  };\n\n  handleAddDevice = deviceData => {\n    if (!includesDevice(deviceData, this.state.myDevices)) {\n      const newDeviceState = this.state.myDevices.concat(deviceData);\n      this.setState({ myDevices: newDeviceState });\n      localStorage.setItem(\"myDevices\", JSON.stringify(newDeviceState));\n    }\n    this.setState({ showResults: false });\n    this.setState({ previousResults: [] });\n    this.setState({ searchResults: [] });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          height: \"100vh\",\n          overflow: \"hidden\"\n        }}\n      >\n        <div className=\"center-horizontally\">\n          <h1\n            className=\"font-weight-light text-center\"\n            style={{ color: \" #0068d0\", marginTop: \"16px\" }}\n          >\n            My Devices\n          </h1>\n          <div\n            className=\"m-2 shadow\"\n            style={{\n              display: \"inline-block\",\n              width: \"340px\",\n              height: \"50vh\",\n              overflow: \"hidden\",\n              margin: \"0 auto\",\n              borderRadius: \"4px\"\n            }}\n          >\n            <OwnedDevices\n              onDelete={this.handleDelete}\n              ownedDevices={this.state.myDevices}\n            />\n          </div>\n          <div\n            style={{\n              height: \"38px\",\n              marginTop: \"-8px\"\n            }}\n          >\n            <SearchBar\n              onAddDevice={this.handleAddDevice}\n              onChange={this.handleSearchStringChange}\n              searchResults={this.state.searchResults}\n              showResults={this.state.showResults}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//================================ helper functions ================================\n\nfunction getFilteredResults(searchStr) {\n  // //https://www.ifixit.com/api/2.0/suggest/QUERYSTRING?doctypes=device\n  // let requestString = \"https://www.ifixit.com/api/2.0/suggest/\";\n  // requestString += removeSpaces(searchStr) + \"?doctypes=device\";\n  let requestString = \"https://www.ifixit.com/api/2.0/search/\";\n  requestString +=\n    removeSpaces(searchStr) + \"?c-doctype_namespace=product&doctype=topic\";\n\n  let searchResults = fetch(requestString)\n    .then(results => {\n      return results.json();\n    })\n    .then(function(data) {\n      return filterAndFormatResults(data.results);\n    })\n    .catch(function(error) {\n      console.log(error);\n      return [];\n    });\n  return searchResults;\n}\n\nfunction removeSpaces(searchStr) {\n  return searchStr.replace(/\\s/g, \"%20\");\n}\nfunction filterAndFormatResults(searchData) {\n  let output = [];\n  for (let i = 0; i < searchData.length; i++) {\n    const element = searchData[i];\n    if (element.dataType === \"wiki\" && element.namespace === \"CATEGORY\") {\n      output.push({\n        id: element.wikiid,\n        name: element.title,\n        image: element.image.medium,\n        wikiLink: element.url\n      });\n    }\n  }\n  return output;\n}\n\nfunction includesDevice(deviceData, myDevices) {\n  for (let i = 0; i < myDevices.length; i++) {\n    const device = myDevices[i];\n    if (device.id === deviceData.id) return true;\n  }\n  return false;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}
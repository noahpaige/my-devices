{"version":3,"sources":["components/searchResult.jsx","components/noneResult.jsx","components/searchResults.jsx","components/searchBar.jsx","components/ownedDevice.jsx","components/ownedDevices.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SearchResult","Button","onClick","props","onAddDevice","deviceInfo","className","border","variant","style","maxHeight","width","Row","Col","xs","Image","src","this","image","rounded","fluid","verticalAlign","display","margin","name","Component","NoneResult","disabled","backgroundColor","borderWidth","color","SearchResults","state","showResults","height","top","borderRadius","overflowY","overflowX","padding","searchResults","length","map","key","id","wikiLink","SearchBar","outerDivNode","createRef","textInputNode","inputValue","handleChange","searchStr","setState","onChange","handleClickInside","handleClickOutside","e","current","contains","target","handleAddDevice","handleUnfocus","console","log","document","addEventListener","ref","FormControl","event","value","placeholder","position","onBlur","ownedDevice","Toast","onClose","onDelete","boxShadow","Header","maxWidth","alt","Body","window","open","OwnedDevices","overflow","ownedDevices","marginTop","marginLeft","marginRight","App","myDevices","previousResults","handleDelete","deviceId","filter","d","localStorage","setItem","JSON","stringify","handleSearchStringChange","requestString","replace","removeSpaces","fetch","then","results","json","data","searchData","output","i","element","dataType","namespace","push","wikiid","title","medium","url","filterAndFormatResults","catch","error","getFilteredResults","response","deviceData","includesDevice","newDeviceState","concat","saveData","parse","getItem","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.817105c8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass SearchResult extends Component {\r\n  render() {\r\n    return (\r\n      <Button\r\n        onClick={() => this.props.onAddDevice(this.props.deviceInfo)}\r\n        //variant=\"light\"\r\n        className=\"m-2\"\r\n        border=\"0\"\r\n        variant=\"light\"\r\n        style={{\r\n          maxHeight: \"70px\",\r\n          width: \"100%\",\r\n          //backgroundColor: \"#88a6b433\",\r\n          border: \"0px\"\r\n          //color: \"#222224\"\r\n        }}\r\n      >\r\n        <div className=\"gridContainer\">\r\n          <Row>\r\n            <Col xs={3} className=\"align-middle\">\r\n              <Image\r\n                src={this.props.deviceInfo.image}\r\n                rounded=\"true\"\r\n                fluid=\"true\"\r\n                style={{\r\n                  verticalAlign: \"middle\"\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col style={{ display: \"flex\" }}>\r\n              <h5 style={{ margin: \"auto\" }}>{this.props.deviceInfo.name}</h5>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass NoneResult extends Component {\r\n  render() {\r\n    return (\r\n      <Button\r\n        disabled\r\n        className=\"m-2\"\r\n        style={{\r\n          width: \"100%\",\r\n          backgroundColor: \"#cccccc\",\r\n          borderWidth: \"0\",\r\n          color: \"#696970\"\r\n        }}\r\n      >\r\n        No Results\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoneResult;\r\n","import React, { Component } from \"react\";\r\nimport SearchResult from \"./searchResult\";\r\nimport NoneResult from \"./noneResult\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nclass SearchResults extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.showResults ? \"\" : \"hidden\"}\r\n        style={{\r\n          height: \"100%\",\r\n          top: \"1px\",\r\n          borderRadius: \"5px\",\r\n          overflowY: \"hidden\",\r\n          overflowX: \"hidden\",\r\n          padding: \"15px\"\r\n        }}\r\n      >\r\n        {this.props.searchResults.length > 0 ? (\r\n          this.props.showResults &&\r\n          this.props.searchResults.map(deviceInfo => (\r\n            <Row key={deviceInfo.id}>\r\n              <SearchResult\r\n                key={deviceInfo.wikiLink}\r\n                deviceInfo={deviceInfo}\r\n                onAddDevice={this.props.onAddDevice}\r\n              />\r\n            </Row>\r\n          ))\r\n        ) : this.props.showResults ? (\r\n          <Row>\r\n            <NoneResult />\r\n          </Row>\r\n        ) : null}\r\n      </div>\r\n      // <div\r\n      //   className={this.props.showResults ? \"\" : \"hidden\"}\r\n      //   style={{\r\n      //     position: \"relative\",\r\n      //     overflowX: \"hidden\",\r\n      //     padding: \"5px\"\r\n      //   }}\r\n      // >\r\n      //   {this.props.searchResults.length > 0 ? (\r\n      //     this.props.showResults &&\r\n      //     this.props.searchResults.map(deviceInfo => (\r\n      //       <Row key={deviceInfo.id}>\r\n      //         <SearchResult\r\n      //           key={deviceInfo.wikiLink}\r\n      //           deviceInfo={deviceInfo}\r\n      //           onAddDevice={this.props.onAddDevice}\r\n      //         />\r\n      //       </Row>\r\n      //     ))\r\n      //   ) : this.props.showResults ? (\r\n      //     <Row>\r\n      //       <NoneResult />\r\n      //     </Row>\r\n      //   ) : null}\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { Component, createRef } from \"react\";\r\n\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport SearchResults from \"./searchResults\";\r\nimport \"../styles/styles.css\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    showResults: false,\r\n    outerDivNode: createRef(),\r\n    textInputNode: createRef(),\r\n    inputValue: \"\"\r\n  };\r\n\r\n  handleChange = searchStr => {\r\n    this.setState({ inputValue: searchStr });\r\n    this.props.onChange(searchStr);\r\n    if (this.props.searchResults.length > 0)\r\n      this.setState({ showResults: true });\r\n  };\r\n  handleClickInside = () => {\r\n    this.setState({ showResults: true });\r\n  };\r\n\r\n  handleClickOutside = e => {\r\n    if (this.state.outerDivNode.current.contains(e.target)) return;\r\n    this.setState({ showResults: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n  }\r\n\r\n  handleAddDevice = deviceInfo => {\r\n    this.setState({ showResults: false });\r\n    this.setState({ inputValue: \"\" });\r\n    this.props.onAddDevice(deviceInfo);\r\n  };\r\n  handleUnfocus = () => {\r\n    console.log(\"UNFOCUS\");\r\n    this.setState({ showResults: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"\"\r\n        style={{\r\n          maxHeight: \"32vh\",\r\n          height: \"32vh\",\r\n          overflowX: \"hidden\",\r\n          overflowY: \"hidden\",\r\n          borderRadius: \"5px\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"container\"\r\n          style={{ height: \"38px\", width: \"340px\", padding: \"0px\" }}\r\n          ref={this.state.outerDivNode}\r\n        >\r\n          <FormControl\r\n            className=\"shadow search-bar\"\r\n            onClick={this.handleClickInside}\r\n            onChange={event => this.handleChange(event.target.value)}\r\n            placeholder=\"Search for a device\"\r\n            value={this.state.inputValue}\r\n            ref={this.state.textInputNode}\r\n            style={{\r\n              backgroundColor: \"rgba(255, 255, 255, 0.3)\",\r\n              width: \"100%\",\r\n              padding: \"5px\"\r\n            }}\r\n          />\r\n          <div\r\n            className={this.state.showResults ? \"shadow\" : \"hidden\"}\r\n            style={{\r\n              position: \"relative\",\r\n              maxHeight: \"26vh\",\r\n              top: \"1px\",\r\n              overflowX: \"hidden\",\r\n              overflowY: \"auto\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: \"rgba(255,255,255,0.3)\",\r\n              padding: \"10px\"\r\n            }}\r\n          >\r\n            <SearchResults\r\n              onAddDevice={this.handleAddDevice}\r\n              searchResults={this.props.searchResults}\r\n              showResults={this.state.showResults}\r\n              onBlur={this.handleUnfocus}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nclass ownedDevice extends Component {\r\n  render() {\r\n    return (\r\n      <Toast\r\n        onClose={() => this.props.onDelete(this.props.deviceInfo.id)}\r\n        style={{\r\n          width: \"100%\",\r\n          backgroundColor: \"rgba(0,0,0,0.05)\",\r\n          boxShadow: \"none\"\r\n        }}\r\n      >\r\n        <Toast.Header\r\n          style={{\r\n            backgroundColor: \"rgba(0,0,0,0.04)\",\r\n            color: \"#696970\"\r\n          }}\r\n        >\r\n          <img\r\n            src={this.props.deviceInfo.image}\r\n            style={{ maxHeight: \"30px\", maxWidth: \"30px\" }}\r\n            className=\"rounded mr-2\"\r\n            alt=\"\"\r\n          />\r\n          <strong className=\"mr-auto\">{this.props.deviceInfo.name}</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <button\r\n            className=\"wiki-button\"\r\n            onClick={() =>\r\n              window.open(this.props.deviceInfo.wikiLink, \"_blank\")\r\n            }\r\n          >\r\n            wiki\r\n          </button>\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ownedDevice;\r\n","import \"../styles/styles.css\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport OwnedDevice from \"./ownedDevice\";\r\n\r\nclass OwnedDevices extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"new-scrollbar un-blur\"\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          overflow: \"hidden\",\r\n          padding: \"5px\",\r\n          backgroundColor: \"rgba(255,255,255,0.3)\",\r\n          borderRadius: \"5px\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"container hide-scrollbar\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            overflowY: \"auto\",\r\n            overflowX: \"hidden\"\r\n          }}\r\n        >\r\n          {this.props.ownedDevices.map(deviceInfo => (\r\n            <Row\r\n              style={{\r\n                marginTop: \"6px\",\r\n                marginLeft: \"-6px\",\r\n                marginRight: \"-6px\"\r\n              }}\r\n              key={deviceInfo.id}\r\n            >\r\n              <OwnedDevice\r\n                key={deviceInfo.id}\r\n                deviceInfo={deviceInfo}\r\n                onDelete={this.props.onDelete}\r\n              />\r\n            </Row>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OwnedDevices;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport SearchBar from \"./components/searchBar\";\r\nimport OwnedDevices from \"./components/ownedDevices\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    myDevices: [\r\n      // {\r\n      //   id: 0,\r\n      //   name: \"iPhone XR\",\r\n      //   image:\r\n      //     \"https://d3nevzfk7ii3be.cloudfront.net/igi/yiiosKwJCvSrNS12.thumbnail\",\r\n      //   wikiLink: \"https://www.ifixit.com/Device/iPhone_XR\"\r\n      // },\r\n      // {\r\n      //   id: 1,\r\n      //   name: \"Xbox One\",\r\n      //   image:\r\n      //     \"https://d3nevzfk7ii3be.cloudfront.net/igi/GtHYwOXhf6TNnp2h.large\",\r\n      //   wikiLink: \"https://www.ifixit.com/Device/Xbox_One\"\r\n      // }\r\n    ],\r\n    searchResults: [],\r\n    previousResults: [],\r\n    showResults: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const saveData = JSON.parse(localStorage.getItem(\"myDevices\"));\r\n    saveData != null\r\n      ? this.setState({ myDevices: saveData })\r\n      : this.setState({ myDevices: [] });\r\n  }\r\n\r\n  handleDelete = deviceId => {\r\n    const myDevices = this.state.myDevices.filter(d => d.id !== deviceId);\r\n    localStorage.setItem(\"myDevices\", JSON.stringify(myDevices));\r\n    this.setState({ myDevices });\r\n  };\r\n\r\n  handleSearchStringChange = searchStr => {\r\n    if (searchStr !== \"\") {\r\n      getFilteredResults(searchStr).then(response => {\r\n        console.log(\"response: \" + response);\r\n        if (response.length > 0) {\r\n          this.setState({ previousResults: this.state.searchResults });\r\n          this.setState({ searchResults: response });\r\n        } else this.setState({ searchResults: this.state.previousResults });\r\n      });\r\n      this.setState({ showResults: true });\r\n    } else {\r\n      this.setState({ searchResults: [] });\r\n      this.setState({ showResults: false });\r\n    }\r\n  };\r\n\r\n  handleAddDevice = deviceData => {\r\n    if (!includesDevice(deviceData, this.state.myDevices)) {\r\n      const newDeviceState = this.state.myDevices.concat(deviceData);\r\n      this.setState({ myDevices: newDeviceState });\r\n      localStorage.setItem(\"myDevices\", JSON.stringify(newDeviceState));\r\n    }\r\n    this.setState({ showResults: false });\r\n    this.setState({ previousResults: [] });\r\n    this.setState({ searchResults: [] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          overflow: \"hidden\"\r\n        }}\r\n      >\r\n        <div className=\"center-horizontally\">\r\n          <h1\r\n            className=\"font-weight-light text-center\"\r\n            style={{ color: \" #0068d0\", marginTop: \"16px\" }}\r\n          >\r\n            My Devices\r\n          </h1>\r\n          <div\r\n            className=\"m-2 shadow\"\r\n            style={{\r\n              display: \"inline-block\",\r\n              width: \"340px\",\r\n              height: \"50vh\",\r\n              overflow: \"hidden\",\r\n              margin: \"0 auto\",\r\n              borderRadius: \"4px\"\r\n            }}\r\n          >\r\n            <OwnedDevices\r\n              onDelete={this.handleDelete}\r\n              ownedDevices={this.state.myDevices}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              height: \"38px\",\r\n              marginTop: \"-8px\",\r\n              marginLeft: \"8px\"\r\n            }}\r\n          >\r\n            <SearchBar\r\n              onAddDevice={this.handleAddDevice}\r\n              onChange={this.handleSearchStringChange}\r\n              searchResults={this.state.searchResults}\r\n              showResults={this.state.showResults}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//================================ helper functions ================================\r\n\r\nfunction getFilteredResults(searchStr) {\r\n  // //https://www.ifixit.com/api/2.0/suggest/QUERYSTRING?doctypes=device\r\n  // let requestString = \"https://www.ifixit.com/api/2.0/suggest/\";\r\n  // requestString += removeSpaces(searchStr) + \"?doctypes=device\";\r\n  let requestString = \"https://www.ifixit.com/api/2.0/search/\";\r\n  requestString +=\r\n    removeSpaces(searchStr) + \"?c-doctype_namespace=product&doctype=topic\";\r\n\r\n  let searchResults = fetch(requestString)\r\n    .then(results => {\r\n      return results.json();\r\n    })\r\n    .then(function(data) {\r\n      return filterAndFormatResults(data.results);\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n      return [];\r\n    });\r\n  return searchResults;\r\n}\r\n\r\nfunction removeSpaces(searchStr) {\r\n  return searchStr.replace(/\\s/g, \"%20\");\r\n}\r\nfunction filterAndFormatResults(searchData) {\r\n  let output = [];\r\n  for (let i = 0; i < searchData.length; i++) {\r\n    const element = searchData[i];\r\n    if (element.dataType === \"wiki\" && element.namespace === \"CATEGORY\") {\r\n      output.push({\r\n        id: element.wikiid,\r\n        name: element.title,\r\n        image: element.image.medium,\r\n        wikiLink: element.url\r\n      });\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction includesDevice(deviceData, myDevices) {\r\n  for (let i = 0; i < myDevices.length; i++) {\r\n    const device = myDevices[i];\r\n    if (device.id === deviceData.id) return true;\r\n  }\r\n  return false;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}